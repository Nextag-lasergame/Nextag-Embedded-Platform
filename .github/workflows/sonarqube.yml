name: Sonarqube analysis
on:
  push:
    branches:
      - master
      - develop
env:
  SONAR_SCANNER_VERSION: 4.8.0.2856
  BUILD_TYPE: Release
jobs:
  Sonarqube-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y cmake

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache avr-toolchain
        id: cache-avr-toolchain
        uses: actions/cache@v1
        with:
          path: .\avr-toolchain
          key: ${{ runner.os }}-avr-toolchain
          restore-keys: ${{ runner.os }}-avr-toolchain

      - name: Setup avr-toolchain
        if: steps.cache-avr-toolchain.outputs.cache-hit != 'true'
        run:
        wget https://github.com/Nextag-lasergame/avr-gcc-toolchains/releases/download/v13.2/avr-gcc-13.2.0-x64-linux.tar.gz &&
          mkdir $PWD/avr-toolchain &&
          tar -xf avr-gcc-13.2.0-x64-linux.tar.gz -C $PWD/avr-toolchain

      - name: Download and set up sonar-scanner
        env:
          SONAR_SCANNER_DOWNLOAD_URL: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{env.SONAR_SCANNER_VERSION }}-linux.zip
        run:
          mkdir -p $HOME/.sonar &&
          curl -sSLo $HOME/.sonar/sonar-scanner.zip ${{ env.SONAR_SCANNER_DOWNLOAD_URL }} &&
          unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/ &&
          echo "$HOME/.sonar/sonar-scanner-${{ env.SONAR_SCANNER_VERSION }}-linux/bin" >> $GITHUB_PATH

      - name: Configure CMake
        run: 
          export PATH="$PWD/avr-toolchain/avr-gcc-13.2.0-x64-linux/bin:$PATH" &&
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -S .
          
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          sonar-scanner --define sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
          --define sonar.cfamily.compile-commands=build/compile_commands.json